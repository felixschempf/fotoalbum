openapi: 3.0.0
info:
  title: Speisekarte API
  version: '1.0'
  description: 'Die Speisekarte-App nutzt einen REST-Webservice zur Kommunikation mit dem Backend. Diese API definiert den Webservice zum Lesen, Schreiben, Löschen von Einträgen in der Speisekarte.'
  contact:
    name: Simon Mayer
    url: '-'
    email: -
  license:
    name: CC-BY-4.0
servers:
  - url: '-'
paths:
  /:
    get:
      summary: Wurze Speise des Webservices zum HATEOAS-Abruf seiner Collections
      tags:
        - Start
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HATEOAS_Collection'
      operationId: get
      description: HATEOAS-Links mit den Collections abrufen
  ########## ABRUF DER OPENAPI.YAML ###################
  /openapi.yaml:
    get:
      summary: OpenAPI-Spezifikation des Webservices
      tags:
        - Start
      responses:
        '200':
          description: OK
  ###################################################
  /card:
    get:
      summary: Speise suchen
      tags:
        - Speisekarte
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Speise'
      operationId: get-speise
      description: Speisen suchen
      parameters:
        - schema:
            type: string
          in: query
          name: name_gericht
          description: Gesuchter Name des Gerichts
        - schema:
            type: string
          in: query
          name: gericht_preis
          description: Gesuchter Preis
        - schema:
            type: string
          in: query
          name: gericht_nummer
          description: Gesuchte Nummer
    post:
      summary: Speise anlegen
      tags:
        - Speisekarte
      responses:
        '201':
          description: Created
          #### WARNING ######
          headers:
            location:
              schema:
                type: string
          ###################
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Speise'
      operationId: post-speise
      description: Speise anlegen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Speise'
        description: Daten der anzulegenden Speise
  '/speise/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Speise lesen
      tags:
        - Speise
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Speise'
        '404':
          description: Not Found
      operationId: get-speise-id
      description: Details zu einer einzelnen Speise lesen
    put:
      summary: Speise überschreiben
      tags:
        - Speise
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Speise'
        '404':
          description: Not Found
      operationId: put-speise-id
      description: 'Kompletten Adressdatensatz überschreiben. Es können alle Felder geändert werden mit Ausnahme der ID des Datensatzes. Der Versuch, die ID zu ändern, wird vom Server stillschweigend ignoriert. Bei einer PUT-Anfrage muss der komplette zu speichernde Datensatz an den Server geschickt werden inkl. aller Felder, auch denen, die nicht geändert werden sollen.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Speise'
    patch:
      summary: Einzelne Felder ändern
      tags:
        - Speise
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Speise'
        '404':
          description: Not Found
      operationId: patch-address-id
      description: 'Einzelne Felder einer Speise überschreiben. Es können alle Felder geändert werden mit Ausnahme der ID des Datensatzes. Der Versuch, die ID zu ändern, wird vom Server stillschweigend ignoriert. Bei einer PATCH-Anfrage genügt es, nur die tatsächlich zu ändernden Felder an den Server zu schicken.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Speise'
    delete:
      summary: Speise löschen
      tags:
        - Speise
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      operationId: delete-speise-id
components:
  schemas:
    Address:
      title: Address
      type: object
      description: Eine Speise
      properties:
        _id:
          type: string
        name_gericht:
          type: string
        gericht_preis:
          type: string
        gericht_nummer:
          type: string
    HATEOAS_Collection:
      title: HATEOAS_Collection
      type: object
      description: 'Wird von der Star Speise des Webservices genutzt, um eine Liste aller Collections des REST-Webservices zu liefern. Zu jeder Collection wird dokumentiert, wie diese durchsucht und zur Anlage neuer Datensätze verwendet werden kann.'
      properties:
        _name:
          type: string
        query:
          $ref: '#/components/schemas/HATEOAS_Link'
        create:
          $ref: '#/components/schemas/HATEOAS_Link'
    HATEOAS_Resource:
      title: HATEOAS_Resource
      type: object
      description: 'HATEOAS-Links eines einzelnen Eintrags (Ressource) des Webservices. Über diese Struktur wird mitgeteilt, wie die Details zu einem Eintrag abgerufen werden können, wie der Eintrag geändert oder gelöscht werden kann.'
      properties:
        read:
          $ref: '#/components/schemas/HATEOAS_Link'
        update:
          $ref: '#/components/schemas/HATEOAS_Link'
        patch:
          $ref: '#/components/schemas/HATEOAS_Link'
        delete:
          $ref: '#/components/schemas/HATEOAS_Link'
    HATEOAS_Link:
      title: HATEOAS_Link
      type: object
      description: Informationen zu einem einzelnen Link für das HATEOAS-Prinzip.
      properties:
        url:
          type: string
        method:
          type: string
        query_params:
          type: array
          items:
            type: string
tags:
  - name: Speise
  - name: Speisekarte
  - name: Start
