openapi: 3.1.0
info:
  title: Speisekarte API
  version: '1.0'
  contact:
    name: Simon Mayer
    email: mayer-simon1@gmx.de
servers:
  - url: 'http://localhost:3000'
paths:
  /:
    get:
      summary: Wurzeladresse des Webservices
      tags:
        - Start
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HATEOAS_Collection'
      operationId: get
      description: HATEOAS-Links mit den Collections aufrufen
  /speise:
    post:
      summary: Speise anlegen
      tags:
        - Speisekarte
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Speise'
      operationId: post-speise
      description: Adresse anlegen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Speise'
        description: Daten der anzulegenden Speise
    get:
      summary: Speise suchen
      tags:
        - Speisekarte
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Speise'
      operationId: get-speise
      description: Speisen suchen
      parameters:
        - schema:
            type: string
          in: query
          name: name_gericht
          description: Gesuchter Name
        - schema:
            type: string
          in: query
          name: gericht_preis
          description: Gesuchter Preis
        - schema:
            type: string
          in: query
          name: gericht_nummer
          description: Gesuchte Nummer
  '/speise/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Speise lesen
      tags:
        - Speise
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Speise'
        '404':
          description: Not Found
      operationId: get-speise-id
      description: Eine einzele Speise lesen
    put:
      summary: Speise überschreiben
      tags:
        - Speise
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Speise'
        '404':
          description: Not Found
      operationId: put-speise-id
      description: Speise überschreiben
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Speise'
    patch:
      summary: Einzelne Felder ändern
      tags:
        - Speise
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Speise'
        '404':
          description: Not Found
      operationId: patch-speise-id
      description: Einzelne Felder könne geändert werden
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Speise'
    delete:
      summary: Speise löschen
      tags:
        - Speise
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      operationId: delete-speise-id
      description: Löschen einer Speise
components:
  schemas:
    Speise:
      title: Speise
      type: object
      description: Eine Speise
      properties:
        _id:
          type: string
        name_gericht:
          type: string
        gericht_preis:
          type: string
        gericht_name:
          type: string
    HATEOAS_Resource:
      title: HATEOAS_Resource
      type: object
      description: HATEOAS-Links eines einzelnen Eintrags des Webservices
      properties:
        read:
          $ref: '#/components/schemas/HATEOAS_Link'
        update:
          $ref: '#/components/schemas/HATEOAS_Link'
        patch:
          $ref: '#/components/schemas/HATEOAS_Link'
        delete:
          $ref: '#/components/schemas/HATEOAS_Link'
    HATEOAS_Link:
      title: HATEOAS_Link
      type: object
      description: Informationen zu einem einzelnen Link
      properties:
        url:
          type: string
        method:
          type: string
        query_params:
          type: array
          items:
            type: string
    HATEOAS_Collection:
      title: HATEOAS_Collection
      type: object
      description: 'Wird von der Startadresse genutz, um eine Liste alles Collections des REST-Webservices zu liefern. Zu jeder Collection wird dokumentirt, wie diese durchsucht und zur Anlage neuer Datensätze verwendet werden kann'
      properties:
        _name:
          type: string
        query:
          $ref: '#/components/schemas/HATEOAS_Link'
        create:
          $ref: '#/components/schemas/HATEOAS_Link'
tags:
  - name: Speise
  - name: Speisekarte
  - name: Start
